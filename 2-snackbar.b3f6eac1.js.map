{"mappings":"A,M,wC,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCIA,AADa,SAAS,aAAa,CAAC,SAC/B,gBAAgB,CAAC,SAOtB,SAAsB,CAAK,EACzB,EAAM,cAAc,GAKpB,AAWF,CAAA,SAAqB,CAAA,MAAE,CAAK,CAAA,MAAE,CAAK,CAAE,EACnC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,WAAW,KACL,MACF,EAAQ,CAAE,MAAA,EAAO,MAAA,CAAM,GAEvB,EAAO,CAAE,MAAA,EAAO,MAAA,CAAM,EAE1B,EAAG,OAAO,GACZ,EACF,CAAA,EAvBsB,OAAO,WAAW,CAAC,AADtB,IAAI,SAAS,EAAM,MAAM,EACM,OAAO,KAGpD,IAAI,CAAC,CAAC,CAAA,MAAE,CAAK,CAAA,MAAE,CAAK,CAAE,IACrB,EAAe,EAAO,EACxB,GACC,KAAK,CAAC,CAAC,CAAA,MAAE,CAAK,CAAA,MAAE,CAAK,CAAE,IACtB,EAAe,EAAO,EACxB,GAEF,EAAM,MAAM,CAAC,KAAK,EACpB,GApBA,MACa,YAiCb,SAAS,EAAe,CAAK,CAAE,CAAK,EAClC,IAAM,EACJ,MACI,CAAC,8BAAuB,EAAE,EAAM,EAAE,CAAC,CACnC,CAAC,6BAAsB,EAAE,EAAM,EAAE,CAAC,CAGxC,A,C,AAAA,G,AAAA,E,U,C,AAAA,E,O,CAAA,C,EAAS,IAAI,CAAC,CACZ,KAAM,CAAA,EACN,gBAAiB,CAAA,EAJH,MAAsC,UAAY,UAI5C,CAAS,CAC7B,QAAS,CAAA,EAAG,EAAA,CAAS,CACrB,aAAc,QACd,YAAa,KACb,SAAU,WACV,MAAO,CAAA,EACP,YAAa,CACf,EACF","sources":["<anon>","src/js/2-snackbar.js"],"sourcesContent":["import \"./1-timer.3f721895.js\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire3352\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire3352\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $7tIZY = parcelRequire(\"7tIZY\");\n\nconst $e3535fa8245eb405$var$form = document.querySelector('.form');\n$e3535fa8245eb405$var$form.addEventListener('submit', $e3535fa8245eb405$var$onSubmitForm);\nconst $e3535fa8245eb405$var$stateDictionary = {\n    FULFILLED: 'fulfilled',\n    REJECTED: 'rejected'\n};\nfunction $e3535fa8245eb405$var$onSubmitForm(event) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const formDataObj = Object.fromEntries(formData.entries());\n    $e3535fa8245eb405$var$makePromise(formDataObj).then(({ delay: delay, state: state })=>{\n        $e3535fa8245eb405$var$iziToastAction(delay, state);\n    }).catch(({ delay: delay, state: state })=>{\n        $e3535fa8245eb405$var$iziToastAction(delay, state);\n    });\n    event.target.reset();\n}\nfunction $e3535fa8245eb405$var$makePromise({ delay: delay, state: state }) {\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            if (state === $e3535fa8245eb405$var$stateDictionary.FULFILLED) resolve({\n                delay: delay,\n                state: state\n            });\n            else reject({\n                delay: delay,\n                state: state\n            });\n        }, Number(delay));\n    });\n}\nfunction $e3535fa8245eb405$var$iziToastAction(delay, state) {\n    const message = state === $e3535fa8245eb405$var$stateDictionary.FULFILLED ? `\\u{2705} Fulfilled promise in ${delay}ms` : `\\u{274C} Rejected promise in ${delay}ms`;\n    const bgColor = state === $e3535fa8245eb405$var$stateDictionary.FULFILLED ? '#b6d7a8' : '#EA9999';\n    (0, (/*@__PURE__*/$parcel$interopDefault($7tIZY))).show({\n        icon: false,\n        backgroundColor: `${bgColor}`,\n        message: `${message}`,\n        messageColor: 'black',\n        messageSize: '16',\n        position: 'topRight',\n        close: false,\n        displayMode: 1\n    });\n}\n\n\n//# sourceMappingURL=2-snackbar.b3f6eac1.js.map\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nconst stateDictionary = {\n  FULFILLED: 'fulfilled',\n  REJECTED: 'rejected',\n};\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const formData = new FormData(event.target);\n  const formDataObj = Object.fromEntries(formData.entries());\n\n  makePromise(formDataObj)\n    .then(({ delay, state }) => {\n      iziToastAction(delay, state);\n    })\n    .catch(({ delay, state }) => {\n      iziToastAction(delay, state);\n    });\n\n  event.target.reset();\n}\n\nfunction makePromise({ delay, state }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === stateDictionary.FULFILLED) {\n        resolve({ delay, state });\n      } else {\n        reject({ delay, state });\n      }\n    }, Number(delay));\n  });\n}\n\nfunction iziToastAction(delay, state) {\n  const message =\n    state === stateDictionary.FULFILLED\n      ? `✅ Fulfilled promise in ${delay}ms`\n      : `❌ Rejected promise in ${delay}ms`;\n  const bgColor = state === stateDictionary.FULFILLED ? '#b6d7a8' : '#EA9999';\n\n  iziToast.show({\n    icon: false,\n    backgroundColor: `${bgColor}`,\n    message: `${message}`,\n    messageColor: 'black',\n    messageSize: '16',\n    position: 'topRight',\n    close: false,\n    displayMode: 1,\n  });\n}"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7tIZY","$e3535fa8245eb405$var$form","document","querySelector","addEventListener","event","preventDefault","$e3535fa8245eb405$var$makePromise","delay","state","Promise","resolve","reject","setTimeout","Number","Object","fromEntries","formData","FormData","target","entries","then","$e3535fa8245eb405$var$iziToastAction","catch","reset","message","a","__esModule","default","show","icon","backgroundColor","messageColor","messageSize","position","close","displayMode"],"version":3,"file":"2-snackbar.b3f6eac1.js.map"}